"""
Последовательности.
    1. Получение среза
    2. Присваевание срезу
    3. Использование + и * для полследовательностей
    4. Построение списка списков
    5. Составное присваивание послдовательностей
    6. Головоломка: присваивание А +=
    7. Метод list.sort и встроеная функция сортировки sorted
"""

# Получение среза
# l = [10, 20, 30, 40, 50, 60]
# print(l[:2])                    # разбить в позиции 2
# print(l[2:])


# s[a:b:c] Здается шаг. Если указать отрицательный, тогда элементы берутся в обратном порядке
# s = 'bicycle'
# print(s[::3])

# reverse
# print(s[::-1])   # Output 'elcycib'
# print(s[::-2])   # Output 'eccb'


# Присваевание срезу
# l = list(range(10))         # l = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
# l[2:5] = [20, 30]           # l = [0, 1, 20, 30, 5, 6, 7, 8, 9]
# del l[5:7]                  # l = [0, 1, 20, 30, 5, 8, 9]
# l[3::2] = [11, 22]          # l = [0, 1, 20, 11, 5, 22, 9]
# l[2:5] = [100]              # l = [0, 1, 100, 22, 9]


# Использование + и * для полследовательностей
l = [1, 2, 3]
l = l * 5                     # l = [1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3]
s = 'abcd'
s = s * 5                     # s = 'abcdabcdabcdabcdabcd'


# Построение списка списков
# Example 2.12
board = [['_'] * 3 for i in range(3)]
board[1][2] = 'X'


# Example 2.13. Ошибочный путь
weird_board = [['_'] * 3] * 3
weird_board[1][2] = '0'


# Составное присваивание послдовательностей

# Головоломка: присваивание А +=
# t принимает значение (1, 2, [30, 40, 50, 60]) и поднимается исключение о том что
# tuple не поддерживает присваивание
t = (1, 2, [30, 40])
t[2] += [50, 60]


# Метод list.sort и встроеная функция сортировки
fruits = ['grape', 'raspberry', 'apple', 'banana']
sorted(fruits)
sorted(fruits, reverse=True)
sorted(fruits, key=len)
sorted(fruits, key=len, reverse=True)

fruits.sort()